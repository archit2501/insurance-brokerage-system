import { db } from '@/db';
import { endorsements } from '@/db/schema';

async function main() {
    const sampleEndorsements = [
        {
            policyId: 1,
            endorsementNumber: 'END/2025/000001',
            type: 'Addition',
            effectiveDate: '2025-02-01',
            description: 'Addition of new electronic equipment to office insurance policy including laptops and servers',
            sumInsuredDelta: 150000.00,
            grossPremiumDelta: 7500.00,
            brokeragePct: 12.5,
            vatPct: 7.5,
            levies: JSON.stringify({ niacom: 112.50, ncrib: 75.00, ed_tax: 37.50 }),
            netAmountDue: 8625.00,
            status: 'Approved',
            preparedBy: 1,
            authorizedBy: 3,
            createdAt: new Date('2025-01-15').toISOString(),
            updatedAt: new Date('2025-01-20').toISOString(),
        },
        {
            policyId: 2,
            endorsementNumber: 'END/2025/000002',
            type: 'Cancellation',
            effectiveDate: '2025-02-05',
            description: 'Cancellation of vehicle insurance due to vehicle sale - partial refund for remaining period',
            sumInsuredDelta: -2000000.00,
            grossPremiumDelta: -75000.00,
            brokeragePct: 10.0,
            vatPct: 7.5,
            levies: JSON.stringify({ niacom: -1125.00, ncrib: -750.00, ed_tax: -375.00 }),
            netAmountDue: -80625.00,
            status: 'Issued',
            preparedBy: 2,
            authorizedBy: 4,
            createdAt: new Date('2025-01-18').toISOString(),
            updatedAt: new Date('2025-01-25').toISOString(),
        },
        {
            policyId: 3,
            endorsementNumber: 'END/2025/000003',
            type: 'Adjustment',
            effectiveDate: '2025-02-10',
            description: 'Adjustment to reflect increased reconstruction cost of residential property due to inflation',
            sumInsuredDelta: 2500000.00,
            grossPremiumDelta: 37500.00,
            brokeragePct: 13.0,
            vatPct: 7.5,
            levies: JSON.stringify({ niacom: 562.50, ncrib: 375.00, ed_tax: 187.50 }),
            netAmountDue: 43125.00,
            status: 'Approved',
            preparedBy: 1,
            authorizedBy: 3,
            createdAt: new Date('2025-01-20').toISOString(),
            updatedAt: new Date('2025-01-28').toISOString(),
        },
        {
            policyId: 1,
            endorsementNumber: 'END/2025/000004',
            type: 'Extension',
            effectiveDate: '2025-03-01',
            description: 'Extension of policy term for additional 3 months due to project delays',
            sumInsuredDelta: 0,
            grossPremiumDelta: 4500.00,
            brokeragePct: 15.0,
            vatPct: 7.5,
            levies: JSON.stringify({ niacom: 67.50, ncrib: 45.00, ed_tax: 22.50 }),
            netAmountDue: 5175.00,
            status: 'Draft',
            preparedBy: 1,
            authorizedBy: null,
            createdAt: new Date('2025-02-01').toISOString(),
            updatedAt: new Date('2025-02-01').toISOString(),
        },
        {
            policyId: 4,
            endorsementNumber: 'END/2025/000005',
            type: 'Reduction',
            effectiveDate: '2025-02-15',
            description: 'Reduction in sum insured due to disposal of machinery and equipment',
            sumInsuredDelta: -1200000.00,
            grossPremiumDelta: -18000.00,
            brokeragePct: 11.0,
            vatPct: 7.5,
            levies: JSON.stringify({ niacom: -270.00, ncrib: -180.00, ed_tax: -90.00 }),
            netAmountDue: -20700.00,
            status: 'Issued',
            preparedBy: 2,
            authorizedBy: 5,
            createdAt: new Date('2025-01-22').toISOString(),
            updatedAt: new Date('2025-02-05').toISOString(),
        },
        {
            policyId: 5,
            endorsementNumber: 'END/2025/000006',
            type: 'Addition',
            effectiveDate: '2025-02-20',
            description: 'Addition of marine cargo coverage for new import shipments from China',
            sumInsuredDelta: 5000000.00,
            grossPremiumDelta: 125000.00,
            brokeragePct: 14.0,
            vatPct: 7.5,
            levies: JSON.stringify({ niacom: 1875.00, ncrib: 1250.00, ed_tax: 625.00 }),
            netAmountDue: 143750.00,
            status: 'Approved',
            preparedBy: 3,
            authorizedBy: 1,
            createdAt: new Date('2025-01-25').toISOString(),
            updatedAt: new Date('2025-02-10').toISOString(),
        },
        {
            policyId: 2,
            endorsementNumber: 'END/2025/000007',
            type: 'Adjustment',
            effectiveDate: '2025-03-15',
            description: 'Adjustment to reflect change in vehicle value due to depreciation adjustment',
            sumInsuredDelta: -200000.00,
            grossPremiumDelta: -3000.00,
            brokeragePct: 10.0,
            vatPct: 7.5,
            levies: JSON.stringify({ niacom: -45.00, ncrib: -30.00, ed_tax: -15.00 }),
            netAmountDue: -3450.00,
            status: 'Draft',
            preparedBy: 4,
            authorizedBy: null,
            createdAt: new Date('2025-02-02').toISOString(),
            updatedAt: new Date('2025-02-02').toISOString(),
        },
        {
            policyId: 3,
            endorsementNumber: 'END/2025/000008',
            type: 'Extension',
            effectiveDate: '2025-04-01',
            description: 'Extension of coverage to include newly acquired retail outlet premises',
            sumInsuredDelta: 800000.00,
            grossPremiumDelta: 12000.00,
            brokeragePct: 12.0,
            vatPct: 7.5,
            levies: JSON.stringify({ niacom: 180.00, ncrib: 120.00, ed_tax: 60.00 }),
            netAmountDue: 13800.00,
            status: 'Approved',
            preparedBy: 2,
            authorizedBy: 3,
            createdAt: new Date('2025-02-05').toISOString(),
            updatedAt: new Date('2025-02-28').toISOString(),
        }
    ];

    await db.insert(endorsements).values(sampleEndorsements);
    
    console.log('✅ Endorsements seeder completed successfully');
}

main().catch((error) => {
    console.error('❌ Seeder failed:', error);
});